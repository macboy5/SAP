*&---------------------------------------------------------------------*
*& Report ZEDR10_PRACTICE002
*&---------------------------------------------------------------------*
*&READ ## 3/27
*&---------------------------------------------------------------------*
REPORT ZEDR10_PRACTICE002.

"ZEDT10_001, ZEDT10_002, ZEDT10_004 ##### ### ####
DATA : BEGIN OF GS_ZEDT10_001.
  INCLUDE TYPE ZEDT10_001.
DATA : END OF GS_ZEDT10_001.

DATA : BEGIN OF GS_ZEDT10_002.
  INCLUDE TYPE ZEDT10_002.
DATA : END OF GS_ZEDT10_002.

DATA : BEGIN OF GS_ZEDT10_004.
  INCLUDE TYPE ZEDT10_004.
DATA : END OF GS_ZEDT10_004.

 DATA : GT_ZEDT10_001 LIKE TABLE OF GS_ZEDT10_001,
       GT_ZEDT10_002 LIKE TABLE OF GS_ZEDT10_002,
       GT_ZEDT10_004 LIKE TABLE OF GS_ZEDT10_004.


SELECT * FROM ZEDT10_001 INTO CORRESPONDING FIELDS OF TABLE GT_ZEDT10_001.
SELECT * FROM ZEDT10_002 INTO CORRESPONDING FIELDS OF TABLE GT_ZEDT10_002.
SELECT * FROM ZEDT10_004 INTO CORRESPONDING FIELDS OF TABLE GT_ZEDT10_004.

"GS_WRITE, GT_WRITE ###
DATA : BEGIN OF GS_WRITE,
  ZCODE LIKE ZEDT10_001-ZCODE,
  ZKNAME LIKE ZEDT10_001-ZKNAME,
  ZTARGET TYPE C LENGTH 10,
  ZTEL LIKE ZEDT10_001-ZTEL,
  ZWARN TYPE C LENGTH 10,
  END OF GS_WRITE.

DATA : GT_WRITE LIKE TABLE OF GS_WRITE.


SORT GT_ZEDT10_001 BY ZCODE.
SORT GT_ZEDT10_002 BY ZCODE.
SORT GT_ZEDT10_004 BY ZCODE ZGRADE DESCENDING.
DELETE ADJACENT DUPLICATES FROM GT_ZEDT10_004 COMPARING ZCODE.


DATA : BEGIN OF GS_ZSUM,
  ZGENDER LIKE ZEDT10_001-ZGENDER,
  ZSUM LIKE ZEDT10_004-ZSUM,
  END OF GS_ZSUM.

DATA : GT_ZSUM LIKE TABLE OF GS_ZSUM.


"GT_WRITE TABLE ### ## ##.
LOOP AT GT_ZEDT10_004 INTO GS_ZEDT10_004.
  CLEAR : GS_WRITE, GS_ZEDT10_001, GS_ZEDT10_002.

  MOVE-CORRESPONDING GS_ZEDT10_004 TO GS_ZEDT10_002.

  READ TABLE GT_ZEDT10_001 WITH KEY ZCODE = GS_ZEDT10_004-ZCODE INTO GS_ZEDT10_001.

  READ TABLE GT_ZEDT10_002 WITH KEY ZCODE = GS_ZEDT10_004-ZCODE INTO GS_ZEDT10_002 COMPARING ZMAJOR.

  IF SY-SUBRC = '2'.
    GS_WRITE-ZTARGET = '####'.
  ENDIF.

  IF GS_ZEDT10_004-ZGRADE =''.
    CONTINUE.
  ELSE.
     MOVE-CORRESPONDING GS_ZEDT10_001 TO GS_WRITE.
     MOVE-CORRESPONDING GS_ZEDT10_001 TO GS_ZSUM.
     MOVE-CORRESPONDING GS_ZEDT10_004 TO GS_ZSUM.

     IF GS_ZEDT10_004-ZGRADE = 'D' OR GS_ZEDT10_004-ZGRADE = 'F'.
        GS_WRITE-ZWARN = '####'.
     ELSE.
        CLEAR : GS_WRITE-ZTEL.
     ENDIF.
   ENDIF.



  APPEND GS_WRITE TO GT_WRITE.
  COLLECT GS_ZSUM INTO GT_ZSUM.

  CLEAR : GS_WRITE.

ENDLOOP.




"####
LOOP AT GT_WRITE INTO GS_WRITE.
  AT FIRST.
    WRITE : / '---------------------------------------------------------------------------'.
    WRITE : / '|  ####  |    ##    |   ####    |     ####     |    ##    | '.
    WRITE : / '---------------------------------------------------------------------------'.
  ENDAT.

  WRITE :/ '|', GS_WRITE-ZCODE, '|', GS_WRITE-ZKNAME,'|',GS_WRITE-ZTARGET,'   |', GS_WRITE-ZTEL, '|',GS_WRITE-ZWARN,'|'.
  WRITE :/ '---------------------------------------------------------------------------'.

ENDLOOP.

DATA : GV_MSUM TYPE I,
      GV_FSUM TYPE I.


READ TABLE GT_ZSUM WITH KEY ZGENDER = 'M' INTO GS_ZSUM.

IF SY-SUBRC = '0'.
  GV_MSUM = GS_ZSUM-ZSUM * 100.
  WRITE : /'###### : ', GV_MSUM.
ELSE.
  WRITE : '## ### # ####'.
ENDIF.

READ TABLE GT_ZSUM WITH KEY ZGENDER = 'F' INTO GS_ZSUM.

IF SY-SUBRC = '0'.
  GV_FSUM = GS_ZSUM-ZSUM * 100.
  WRITE : /'###### : ', GV_FSUM.
ELSE.
  WRITE : '## ### # ####'.
ENDIF.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.4.6 - E.G.Mellodew. 1998-2025. Sap Release 750
