*&---------------------------------------------------------------------*
*&  Include           ZEDR10_FK01_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  POPUP_ADD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM popup_add .

DATA : LV_ANSWER.
CLEAR : LV_ANSWER.

CALL FUNCTION 'POPUP_TO_CONFIRM'
  EXPORTING
   TITLEBAR                    = '### ## '
*   DIAGNOSE_OBJECT             = ' '
    text_question               = '#### ########?'
   TEXT_BUTTON_1               = '##'
   ICON_BUTTON_1               = 'ICON_OKAY'
   TEXT_BUTTON_2               = '##'
   ICON_BUTTON_2               = 'ICON_CANCEL'
*   DEFAULT_BUTTON              = '1'
   DISPLAY_CANCEL_BUTTON       = ''
*   USERDEFINED_F1_HELP         = ' '
   START_COLUMN                = 25
   START_ROW                   = 6
*   POPUP_TYPE                  =
*   IV_QUICKINFO_BUTTON_1       = ' '
*   IV_QUICKINFO_BUTTON_2       = ' '
 IMPORTING
   ANSWER                      = LV_ANSWER.


  "### ##        .
  IF LV_ANSWER EQ 1.
    CALL SCREEN 100.
  ELSE.
    EXIT.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_object_0100 .

  CREATE OBJECT gc_docking_0100
    EXPORTING
      repid                       = SY-REPID
      dynnr                       = SY-DYNNR
      extension                   = 2000
      .
  IF sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT gc_grid_0100
    EXPORTING
      i_parent          = GC_DOCKING_0100
      .
  IF sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_FILEDCAT_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_filedcat_0100 .

  CLEAR : GS_FIELDCAT_0100, GT_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '1'.
  GS_FIELDCAT_0100-FIELDNAME = 'ICON'.
  GS_FIELDCAT_0100-COLTEXT = '##'.
  GS_FIELDCAT_0100-ICON = 'X'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '2'.
  GS_FIELDCAT_0100-FIELDNAME = 'LIFNR'.
  GS_FIELDCAT_0100-COLTEXT = '#####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '3'.
  GS_FIELDCAT_0100-FIELDNAME = 'NAME1'.
  GS_FIELDCAT_0100-COLTEXT = '####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '4'.
  GS_FIELDCAT_0100-FIELDNAME = 'KTOKK'.
  GS_FIELDCAT_0100-COLTEXT = '#####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '5'.
  GS_FIELDCAT_0100-FIELDNAME = 'STCD1'.
  GS_FIELDCAT_0100-COLTEXT = '####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '6'.
  GS_FIELDCAT_0100-FIELDNAME = 'STCD2'.
  GS_FIELDCAT_0100-COLTEXT = '#####'.
  GS_FIELDCAT_0100-EDIT = 'X'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '7'.
  GS_FIELDCAT_0100-FIELDNAME = 'STRAS'.
  GS_FIELDCAT_0100-COLTEXT = '##'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '8'.
  GS_FIELDCAT_0100-FIELDNAME = 'BUKRS'.
  GS_FIELDCAT_0100-COLTEXT = '####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '9'.
  GS_FIELDCAT_0100-FIELDNAME = 'AKONT'.
  GS_FIELDCAT_0100-COLTEXT = '##'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '10'.
  GS_FIELDCAT_0100-FIELDNAME = 'ZTERM'.
  GS_FIELDCAT_0100-COLTEXT = '####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '11'.
  GS_FIELDCAT_0100-FIELDNAME = 'EKORG'.
  GS_FIELDCAT_0100-COLTEXT = '####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '12'.
  GS_FIELDCAT_0100-FIELDNAME = 'EKGRP'.
  GS_FIELDCAT_0100-COLTEXT = '####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '13'.
  GS_FIELDCAT_0100-FIELDNAME = 'WAERS'.
  GS_FIELDCAT_0100-COLTEXT = '######'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

  CLEAR : GS_FIELDCAT_0100.
  GS_FIELDCAT_0100-COL_POS = '14'.
  GS_FIELDCAT_0100-FIELDNAME = 'MWSKZ'.
  GS_FIELDCAT_0100-COLTEXT = '####'.
  APPEND GS_FIELDCAT_0100 TO GT_FIELDCAT_0100.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_LAYOUT_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_layout_0100 .

  CLEAR : GS_LAYOUT_0100.
  GS_LAYOUT_0100-ZEBRA = 'X'.

  CLEAR : GS_VARIANT.
  GS_VARIANT-REPORT = SY-REPID.
  GS_VARIANT-USERNAME = SY-UNAME.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_SORT_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_sort_0100 .

  CLEAR : GS_SORT_0100, GT_SORT_0100.

  GS_SORT_0100-SPOS = 1.
  GS_SORT_0100-FIELDNAME = 'LIFNR'.
  GS_SORT_0100-UP = 'X'.
  APPEND GS_SORT_0100 TO GT_SORT_0100.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_DISPLAY_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_display_0100 .

  CALL METHOD gc_grid_0100->set_table_for_first_display
    EXPORTING
      is_variant                    = GS_VARIANT
      i_save                        = 'A'
      i_default                     = 'X'
      is_layout                     = GS_LAYOUT_0100
    CHANGING
      it_outtab                     = GT_VENDOR
      it_fieldcatalog               = GT_FIELDCAT_0100
      it_sort                       = GT_SORT_0100.
  IF sy-subrc <> 0.
*   Implement suitable error handling here
  ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_screen .

  LOOP AT SCREEN.

    CASE 'X'.
      WHEN P_BTN1.
        IF SCREEN-GROUP1 = 'M1'.
          SCREEN-ACTIVE = 1.
        ELSEIF SCREEN-GROUP1 = 'M2'.
          SCREEN-ACTIVE = 0.
        ENDIF.
      WHEN P_BTN2.
        IF SCREEN-GROUP1 = 'M1'.
          SCREEN-ACTIVE = 0.
        ELSEIF SCREEN-GROUP1 = 'M2'.
          SCREEN-ACTIVE = 1.
        ENDIF.
    ENDCASE.

    MODIFY SCREEN.

  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EXECUTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM execution .

  IF P_BTN1 = 'X'. " ##

    DATA : LV_ANSWER TYPE C.

    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
       TITLEBAR                    = '### ##'
*       DIAGNOSE_OBJECT             = ' '
        text_question               = '#### ########?'
       TEXT_BUTTON_1               = '##'
       ICON_BUTTON_1               = 'ICON_CHECKED'
       TEXT_BUTTON_2               = '##'
       ICON_BUTTON_2               = 'ICON_INCOMPLETE'
       DEFAULT_BUTTON              = '0'
       DISPLAY_CANCEL_BUTTON       = ' '
*       USERDEFINED_F1_HELP         = ' '
       START_COLUMN                = 25
       START_ROW                   = 6
*       POPUP_TYPE                  =
*       IV_QUICKINFO_BUTTON_1       = ' '
*       IV_QUICKINFO_BUTTON_2       = ' '
     IMPORTING
       ANSWER                      = LV_ANSWER
*     TABLES
*       PARAMETER                   =
     EXCEPTIONS
       TEXT_NOT_FOUND              = 1
       OTHERS                      = 2
              .
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.

    IF LV_ANSWER = 1.

      PERFORM VERIFY_CREATION.    " ## ### CALL SCREEN 200( ### ##  ##).

    ELSE.
      EXIT.
    ENDIF.

  ELSEIF P_BTN2 = 'X'. " ##

    PERFORM VERIFY_SCR.



  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .

*  SELECT * FROM ZLFA1_10
*    INTO CORRESPONDING FIELDS OF TABLE GT_VENDOR.

  SELECT * INTO CORRESPONDING FIELDS OF TABLE GT_VENDOR
    FROM ZLFA1_10 AS A
    INNER JOIN ZLFB1_10 AS B
    ON A~LIFNR = B~LIFNR
    INNER JOIN ZLFM1_10 AS C
    ON A~LIFNR = C~LIFNR
    WHERE A~LIFNR IN S_LIFNR
    AND   B~BUKRS IN S_BUKRS.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_HANDLER_DATA_CHANGED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ER_DATA_CHANGED  text
*      -->P_E_ONF4  text
*      -->P_E_ONF4_BEFORE  text
*      -->P_E_ONF4_AFTER  text
*      -->P_E_UCOMM  text
*----------------------------------------------------------------------*
FORM alv_handler_data_changed  USING    p_data_changed TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL
                                        p_onf4
                                        p_onf4_before
                                        p_onf4_after
                                        p_ucomm.

  DATA : LS_MODI TYPE LVC_S_MODI.
  DATA : LV_LEN(02).

  CLEAR : LS_MODI, LV_LEN.

  LOOP AT P_DATA_CHANGED->MT_GOOD_CELLS INTO LS_MODI.
    IF LS_MODI-FIELDNAME = 'STCD2'.
      READ TABLE GT_VENDOR INTO GS_VENDOR INDEX LS_MODI-ROW_ID.

      IF LS_MODI-VALUE IS INITIAL.
        GS_VENDOR-ICON = ICON_LED_RED.
      ELSE.
        LV_LEN = STRLEN( LS_MODI-VALUE ).
        IF LV_LEN = '10'.     " ### ##### 10### ##.
          GS_VENDOR-ICON = ICON_LED_GREEN.
        ELSE.
          GS_VENDOR-ICON = ICON_LED_YELLOW.
        ENDIF.
       ENDIF.

       MODIFY GT_VENDOR FROM GS_VENDOR INDEX LS_MODI-ROW_ID.
       CLEAR GS_VENDOR.
     ENDIF.
   ENDLOOP.

   PERFORM REFRESH.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_DATA_CHANGED_FINISHED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_MODIFIED  text
*      -->P_ET_GOOD_CELLS  text
*----------------------------------------------------------------------*
FORM alv_data_changed_finished  USING    p_modified
                                         p_good_cells TYPE LVC_T_MODI.

  DATA : LS_MODI TYPE LVC_S_MODI.

  CLEAR : LS_MODI.

  LOOP AT P_GOOD_CELLS INTO LS_MODI.
    IF LS_MODI-FIELDNAME ='STCD2'.
      READ TABLE GT_VENDOR INTO GS_VENDOR INDEX LS_MODI-ROW_ID.

*      IF GS_VENDOR-ICON NE ICON_LED_GREEN.
*        DELETE TABLE GT_VENDOR FROM GS_VENDOR.
*      ENDIF.

      CLEAR GS_VENDOR.

    ENDIF.

   ENDLOOP.

   PERFORM REFRESH.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh .

  DATA : LS_STABLE TYPE LVC_S_STBL.


  " #### USER OOMMAND ### # ### ### ### ###.
  LS_STABLE-ROW = 'X'.
  LS_STABLE-COL = 'X'.



*  CALL METHOD gc_grid_0100->refresh_table_display
*    EXPORTING
*      is_stable      = LS_STABLE.
**      i_soft_refresh =
**    EXCEPTIONS
**      finished       = 1
**      others         = 2
*          .
*  IF sy-subrc <> 0.
**   Implement suitable error handling here
*  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  UPDATE_STCD2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM update_stcd2 .


  " ### ## ##


  CLEAR : GS_ZLFA1_10, GT_ZLFA1_10.

  LOOP AT GT_VENDOR INTO GS_VENDOR.

    IF GS_VENDOR-ICON NE ICON_LED_GREEN.
      MESSAGE | ### ### 10 ## ###. | TYPE 'E'.
      CONTINUE.
    ENDIF.

    MOVE-CORRESPONDING GS_VENDOR TO GS_ZLFA1_10.

    GS_ZLFA1_10-MANDT = SY-MANDT.


    APPEND GS_ZLFA1_10 TO GT_ZLFA1_10.
    CLEAR : GS_ZLFA1_10, GS_VENDOR.

  ENDLOOP.

  " DB ####
  UPDATE ZLFA1_10 FROM TABLE GT_ZLFA1_10.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CLASS_EVENT_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM class_event_0100 .

  CREATE OBJECT GO_EVENT_0100.

  SET HANDLER GO_EVENT_0100->HANDLER_DATA_CHANGED FOR GC_GRID_0100.
  SET HANDLER GO_EVENT_0100->HANDLER_DATA_CHANGED_FINISHED FOR GC_GRID_0100.

  " SCREEN# ITAB ###
  CALL METHOD gc_grid_0100->register_edit_event
    EXPORTING
      i_event_id = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED
*    EXCEPTIONS
*      error      = 1
*      others     = 2
          .
  IF sy-subrc <> 0.
*   Implement suitable error handling here
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  VERIFY_CREATION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM verify_creation .

  IF STRLEN( S_BUKRS-LOW ) NE 4.
    MESSAGE '#### 4## ######.' TYPE 'I'.
    EXIT.

  ELSEIF  STRLEN( S_KTOKK-LOW ) NE 4.
    MESSAGE '##### 4## ######.' TYPE 'I'.
    EXIT.
  ENDIF.

  " ## ###
  CALL SCREEN 200.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_object_0200 .

  CREATE OBJECT gc_docking_0200
    EXPORTING
      repid                       = SY-REPID
      dynnr                       = SY-DYNNR
      extension                   = 2000
      .
  IF sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT gc_grid_0200
    EXPORTING
      i_parent          = GC_DOCKING_0200
      .
  IF sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_FILEDCAT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_filedcat_0200 .
  CLEAR : GS_FIELDCAT_0200, GT_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '1'.
  GS_FIELDCAT_0200-FIELDNAME = 'LIFNR'.
  GS_FIELDCAT_0200-COLTEXT = '#####'.
  GS_FIELDCAT_0200-NO_OUT = 'X'.        " ####
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '2'.
  GS_FIELDCAT_0200-FIELDNAME = 'NAME1'.
  GS_FIELDCAT_0200-COLTEXT = '####'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '3'.
  GS_FIELDCAT_0200-FIELDNAME = 'LAND1'.
  GS_FIELDCAT_0200-COLTEXT = '###'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.


  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '4'.
  GS_FIELDCAT_0200-FIELDNAME = 'STCD1'.
  GS_FIELDCAT_0200-COLTEXT = '####'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  IF S_KTOKK-LOW NE '3000'. " 3000(##) ###  STCD1( ####) ###.
    GS_FIELDCAT_0200-NO_OUT = 'X'.
  ELSE.
    GS_FIELDCAT_0200-NO_OUT = ' '.
  ENDIF.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '5'.
  GS_FIELDCAT_0200-FIELDNAME = 'STCD2'.
  GS_FIELDCAT_0200-COLTEXT = '#####'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  IF S_KTOKK-LOW = '2000'.
    GS_FIELDCAT_0200-NO_OUT = 'X'.  " 2000(##) # ## STCD2(#####) ##
  ELSE.
    GS_FIELDCAT_0200-NO_OUT = ' '.
  ENDIF.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '6'.
  GS_FIELDCAT_0200-FIELDNAME = 'STRAS'.
  GS_FIELDCAT_0200-COLTEXT = '##'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.    " ##### ZLFA1_10


  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '7'.
  GS_FIELDCAT_0200-FIELDNAME = 'AKONT'.
  GS_FIELDCAT_0200-COLTEXT = '##'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '8'.
  GS_FIELDCAT_0200-FIELDNAME = 'ZTERM'.
  GS_FIELDCAT_0200-COLTEXT = '####'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.    " ##### ZLFB1_10

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '9'.
  GS_FIELDCAT_0200-FIELDNAME = 'EKORG'.
  GS_FIELDCAT_0200-COLTEXT = '####'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '10'.
  GS_FIELDCAT_0200-FIELDNAME = 'EKGRP'.
  GS_FIELDCAT_0200-COLTEXT = '####'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '11'.
  GS_FIELDCAT_0200-FIELDNAME = 'WAERS'.
  GS_FIELDCAT_0200-COLTEXT = '######'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.

  CLEAR : GS_FIELDCAT_0200.
  GS_FIELDCAT_0200-COL_POS = '12'.
  GS_FIELDCAT_0200-FIELDNAME = 'MWSKZ'.
  GS_FIELDCAT_0200-COLTEXT = '####'.
  GS_FIELDCAT_0200-EDIT = 'X'.
  APPEND GS_FIELDCAT_0200 TO GT_FIELDCAT_0200.      " ZLFM1_10

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_LAYOUT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_layout_0200 .

  CLEAR : GS_LAYOUT_0200.
  GS_LAYOUT_0200-ZEBRA = 'X'.

  CLEAR : GS_VARIANT.
  GS_VARIANT-REPORT = SY-REPID.
  GS_VARIANT-USERNAME = SY-UNAME.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_SORT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_sort_0200 .

  CLEAR : GS_SORT_0200, GT_SORT_0200.

  GS_SORT_0200-SPOS = 1.
  GS_SORT_0200-FIELDNAME = 'LIFNR'.
  GS_SORT_0200-UP = 'X'.
  APPEND GS_SORT_0200 TO GT_SORT_0200.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CLASS_EVENT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM class_event_0200 .

  CREATE OBJECT GO_EVENT_0200.

  SET HANDLER GO_EVENT_0200->HANDLER_DATA_CHANGED FOR GC_GRID_0200.
  SET HANDLER GO_EVENT_0200->HANDLER_DATA_CHANGED_FINISHED FOR GC_GRID_0200.

  " SCREEN# ITAB ###
  CALL METHOD gc_grid_0200->register_edit_event
    EXPORTING
      i_event_id = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED
*    EXCEPTIONS
*      error      = 1
*      others     = 2
          .
  IF sy-subrc <> 0.
*   Implement suitable error handling here
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_DISPLAY_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_display_0200 .


CALL METHOD gc_grid_0200->set_table_for_first_display
  EXPORTING
*    i_buffer_active               =
*    i_bypassing_buffer            =
*    i_consistency_check           =
*    i_structure_name              =
    is_variant                    = GS_VARIANT
    i_save                        = 'A'
    i_default                     = 'X'
    is_layout                     = GS_LAYOUT_0200
*    is_print                      =
*    it_special_groups             =
*    it_toolbar_excluding          =
*    it_hyperlink                  =
*    it_alv_graphics               =
*    it_except_qinfo               =
*    ir_salv_adapter               =
  CHANGING
    it_outtab                     = GT_VENDOR
    it_fieldcatalog               = GT_FIELDCAT_0200
    it_sort                       = GT_SORT_0200
*    it_filter                     =
*  EXCEPTIONS
*    invalid_parameter_combination = 1
*    program_error                 = 2
*    too_many_lines                = 3
*    others                        = 4
        .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  VERIFY_SCR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM verify_scr .


   IF  STRLEN( S_LIFNR-LOW ) NE 10.
    MESSAGE '##### 10## ######.' TYPE 'I'.
    EXIT.

   ELSEIF STRLEN( S_BUKRS-LOW ) NE 4.
    MESSAGE '#### 4## ######.' TYPE 'I'.
    EXIT.
  ENDIF.


    PERFORM GET_DATA.

    IF GT_VENDOR[] IS NOT INITIAL.
      CALL SCREEN 100.    " ### ## ##
    ELSE.
      MESSAGE I001.
      STOP.
    ENDIF.


ENDFORM.
